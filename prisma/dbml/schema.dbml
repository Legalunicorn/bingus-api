//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table user {
  id Int [pk, increment]
  displayName String [not null]
  username String [unique]
  email String [unique, not null]
  googleId String [unique]
  hashedPassword String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  comments comments [not null]
  posts post [not null]
  postLikes post_likes [not null]
  commentLikes comment_likes [not null]
  followers follow [not null]
  following follow [not null]
  sentMessages message [not null]
  receivedMessages message [not null]
  profile profile
  setting user_setting
}

Table profile {
  id Int [pk, increment]
  bio String [not null, default: '']
  profilePicture String
  pfp_public_id String
  website String
  github String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int [unique, not null]
  user user [not null]
}

Table user_setting {
  id Int [pk, increment]
  isDarkMode Boolean [not null, default: true]
  userId Int [unique, not null]
  user user [not null]
}

Table post {
  id Int [pk, increment]
  body String [not null, default: '']
  gitLink String
  repoLink String
  attachment String
  public_id String
  createdAt DateTime [default: `now()`, not null]
  nextPostId Int
  nextPost post
  prevPost post [not null]
  author user [not null]
  userId Int [not null]
  tags tag [not null]
  likes post_likes [not null]
  comments comments [not null]
}

Table comments {
  id Int [pk, increment]
  body String [not null]
  createdAt DateTime [default: `now()`, not null]
  user user [not null]
  userId Int [not null]
  likes comment_likes [not null]
  parentCommentId Int
  parentComment comments
  childComment comments [not null]
  postId Int [not null]
  post post [not null]
}

Table post_likes {
  id Int [pk, increment]
  user user [not null]
  userId Int [not null]
  post post [not null]
  postId Int [not null]

  indexes {
    (userId, postId) [unique]
  }
}

Table comment_likes {
  id Int [pk, increment]
  user user [not null]
  userId Int [not null]
  comment comments [not null]
  commentId Int [not null]

  indexes {
    (userId, commentId) [unique]
  }
}

Table tag {
  id Int [pk, increment]
  name String [unique, not null]
  posts post [not null]
}

Table message {
  id Int [pk, increment]
  content String [not null]
  createdAt DateTime [default: `now()`, not null]
  senderId Int [not null]
  receiverId Int [not null]
  sender user [not null]
  receiver user [not null]
}

Table follow {
  following user [not null]
  follower user [not null]
  followingId Int [not null]
  followerId Int [not null]
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (followerId, followingId) [pk]
  }
}

Table PostToTag {
  tagsId Int [ref: > tag.id]
  postsId Int [ref: > post.id]
}

Ref: profile.userId - user.id

Ref: user_setting.userId - user.id

Ref: post.nextPostId - post.id [delete: Set Null]

Ref: post.userId > user.id [delete: Cascade]

Ref: comments.userId > user.id

Ref: comments.parentCommentId - comments.id [delete: Cascade]

Ref: comments.postId > post.id [delete: Cascade]

Ref: post_likes.userId > user.id [delete: Cascade]

Ref: post_likes.postId > post.id [delete: Cascade]

Ref: comment_likes.userId > user.id [delete: Cascade]

Ref: comment_likes.commentId > comments.id [delete: Cascade]

Ref: message.senderId > user.id [delete: Cascade]

Ref: message.receiverId > user.id [delete: Cascade]

Ref: follow.followingId > user.id [delete: Cascade]

Ref: follow.followerId > user.id [delete: Cascade]